name: 'Terraform'

on:
  push:
    branches: 
      - main
  pull_request:

env:
  AWS_ROLE_ASSUME : ${{ secrets.AWS_ROLE_ASSUME }}
  AWS_REGION : "us-east-1"

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    #environment: dev

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Configure AWS Credentials with GitHub OIDC to improve the security
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{env.AWS_ROLE_ASSUME}}
        role-session-name: project_terra_session
        aws-region: ${{env.AWS_REGION}}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false

    # On push to "main", build or change infrastructure according to Terraform configuration files
    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve
    # Terraform Destroy
    #- name: Terraform Destroy
    #  id: destroy
    #  if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    #  run: terraform destroy -auto-approve